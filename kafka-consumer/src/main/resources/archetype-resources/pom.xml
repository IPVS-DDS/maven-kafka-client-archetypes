#set( $symbol_pound = '#' )
#set( $symbol_dollar = '$' )
#set( $symbol_escape = '\' )
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>${groupId}</groupId>
  <artifactId>${artifactId}</artifactId>
  <version>${version}</version>

  <properties>
    <docker.repository>${dockerRepository}</docker.repository>
    <application.mainEntryPoint>${package}.${mainClass}</application.mainEntryPoint>

    <java.version>1.8</java.version>
    <kafka.version>0.11.0.1</kafka.version>
    <confluent.version>3.3.0</confluent.version>
    <avro.version>1.8.2</avro.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <repositories>
    <!-- Repository of https://www.confluent.io/home -->
    <!-- Required for dependencies like the schema registry -->
    <repository>
      <id>confluent</id>
      <url>http://packages.confluent.io/maven/</url>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${symbol_dollar}{confluent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.kafka</groupId>
      <artifactId>kafka-clients</artifactId>
      <version>${symbol_dollar}{kafka.version}</version>
    </dependency>

    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-streams-avro-serde</artifactId>
      <version>${symbol_dollar}{confluent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>2.9.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Compiles Java sources -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <inherited>true</inherited>
        <configuration>
          <source>${symbol_dollar}{java.version}</source>
          <target>${symbol_dollar}{java.version}</target>
        </configuration>
      </plugin>

      <!-- Generates java classes from Avro schemas -->
      <plugin>
        <groupId>org.apache.avro</groupId>
        <artifactId>avro-maven-plugin</artifactId>
        <version>${symbol_dollar}{avro.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>schema</goal>
            </goals>
            <configuration>
              <sourceDirectory>${symbol_dollar}{project.basedir}/src/main/resources/avro</sourceDirectory>
              <outputDirectory>${symbol_dollar}{project.build.directory}/generated-sources</outputDirectory>
              <stringType>String</stringType>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copies dependencies to a lib-directory in the build directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${symbol_dollar}{project.build.directory}/lib</outputDirectory>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Packages the compiled Java code in a jar and sets the Main class as entry point -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <mainClass>${symbol_dollar}{application.mainEntryPoint}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Takes care of packaging the final jar and all dependencies in a docker container -->
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>dockerfile-maven-plugin</artifactId>
        <version>1.3.6</version>
        <executions>
          <execution>
            <id>default</id>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <repository>${symbol_dollar}{docker.repository}</repository>
          <tag>${symbol_dollar}{project.version}</tag>
          <buildArgs>
            <JAR_FILE>${symbol_dollar}{project.build.finalName}.jar</JAR_FILE>
          </buildArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
